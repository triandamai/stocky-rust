//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.3

use sea_orm::entity::prelude::*;
use serde::{Serialize,Deserialize};

#[derive(Clone, Debug, PartialEq,Serialize,Deserialize, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_info")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub user_id: String,
    pub name: String,
    pub value: String,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
 #[sea_orm(
    belongs_to="super::user::Entity",
    from = "Column::UserId",
    to = "super::user::Column::Id"
 )]
 User
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}


impl ActiveModelBehavior for ActiveModel {}
