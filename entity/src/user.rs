//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.3

use sea_orm::entity::prelude::*;
use serde::{Serialize,Deserialize};

#[derive(Clone, Debug, PartialEq,DeriveEntityModel,Deserialize,Serialize, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub full_name: String,
    pub email: String,
    pub password: String,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter,DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        has_many=  "super::user_info::Entity"
    )]
    UserInfo,
}


impl Related<super::user_info::Entity> for Entity {
    fn to()-> RelationDef{
        Relation::UserInfo.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}